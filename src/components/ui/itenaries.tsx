'use client'
import { useState } from "react"
import { Button } from "./button"

export const Itenaries = () => {
    return (
        <>
       <div className="flex flex-col gap-5 mt-20 w-full " >
            <span className="flex flex-col gap-2 ">
                <p className="text-[#1D2433] font-semibold text-lg">Top Itineraies</p>
                <p className="text-sm ">Your trip itineraries are placed here</p>
            </span>
            <FlightItenary />
            <HotelItineraies />
            <ActivityItineraies />
        </div>
        </>
    )
}

const FlightItenary = () =>{
    const flights = []
    const [itenary, setItenary] = useState(false)

    return (
        <>
        <div className="bg-[#F0F2F5] rounded-lg min-h-[300px] w-full">
            <div className="flex justify-between w-full p-4">
                <svg width="91" height="28" viewBox="0 0 91 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M21.375 22.25C21.375 22.5484 21.2565 22.8345 21.0455 23.0455C20.8345 23.2565 20.5484 23.375 20.25 23.375H6.75C6.45163 23.375 6.16548 23.2565 5.95451 23.0455C5.74353 22.8345 5.625 22.5484 5.625 22.25C5.625 21.9516 5.74353 21.6655 5.95451 21.4545C6.16548 21.2435 6.45163 21.125 6.75 21.125H20.25C20.5484 21.125 20.8345 21.2435 21.0455 21.4545C21.2565 21.6655 21.375 21.9516 21.375 22.25ZM23.625 14.75V17C23.625 17.2984 23.5065 17.5845 23.2955 17.7955C23.0845 18.0065 22.7984 18.125 22.5 18.125H5.72531C4.83719 18.1291 3.97174 17.8447 3.25925 17.3144C2.54676 16.7842 2.02576 16.0369 1.77469 15.185L0.455626 10.7891C0.371619 10.5092 0.354183 10.2136 0.40471 9.92578C0.455236 9.63798 0.572327 9.36597 0.74664 9.13146C0.920953 8.89695 1.14766 8.70642 1.40868 8.57509C1.6697 8.44375 1.9578 8.37523 2.25 8.375H3C3.29814 8.37502 3.58407 8.49337 3.795 8.70406L5.71875 10.625H7.15031L6.46875 8.5925C6.37482 8.31048 6.34928 8.01016 6.39426 7.71633C6.43923 7.42249 6.55342 7.14356 6.72741 6.90254C6.90139 6.66152 7.13019 6.46533 7.39493 6.33014C7.65966 6.19494 7.95275 6.12463 8.25 6.125H9C9.29813 6.12502 9.58407 6.24337 9.795 6.45406L13.9688 10.625H19.5C20.5936 10.6262 21.6421 11.0612 22.4154 11.8346C23.1888 12.6079 23.6238 13.6564 23.625 14.75ZM21.375 14.75C21.375 14.2527 21.1775 13.7758 20.8258 13.4242C20.4742 13.0725 19.9973 12.875 19.5 12.875H13.5C13.2019 12.875 12.9159 12.7566 12.705 12.5459L8.89031 8.73031L9.77813 11.3947C9.83442 11.5638 9.84973 11.7439 9.82277 11.9201C9.79582 12.0963 9.72739 12.2636 9.62311 12.4082C9.51882 12.5527 9.38168 12.6704 9.22298 12.7516C9.06428 12.8328 8.88857 12.8751 8.71031 12.875H5.25C5.10222 12.8751 4.95586 12.8461 4.8193 12.7897C4.68273 12.7332 4.55862 12.6504 4.45406 12.5459L2.85 10.94L3.92906 14.5391C4.04352 14.9262 4.28051 15.2657 4.60441 15.5066C4.92832 15.7475 5.32165 15.8768 5.72531 15.875H21.375V14.75Z" fill="#344054"/>
                    <path d="M43 7.436V9.47H37.762V12.692H41.776V14.69H37.762V20H35.242V7.436H43ZM46.5869 6.68V20H44.0669V6.68H46.5869ZM49.6347 8.84C49.1907 8.84 48.8187 8.702 48.5187 8.426C48.2307 8.138 48.0867 7.784 48.0867 7.364C48.0867 6.944 48.2307 6.596 48.5187 6.32C48.8187 6.032 49.1907 5.888 49.6347 5.888C50.0787 5.888 50.4447 6.032 50.7327 6.32C51.0327 6.596 51.1827 6.944 51.1827 7.364C51.1827 7.784 51.0327 8.138 50.7327 8.426C50.4447 8.702 50.0787 8.84 49.6347 8.84ZM50.8767 10.028V20H48.3567V10.028H50.8767ZM56.5525 9.866C57.2965 9.866 57.9505 10.016 58.5145 10.316C59.0785 10.604 59.5225 10.982 59.8465 11.45V10.028H62.3845V20.072C62.3845 20.996 62.1985 21.818 61.8265 22.538C61.4545 23.27 60.8965 23.846 60.1525 24.266C59.4085 24.698 58.5085 24.914 57.4525 24.914C56.0365 24.914 54.8725 24.584 53.9605 23.924C53.0605 23.264 52.5505 22.364 52.4305 21.224H54.9325C55.0645 21.68 55.3465 22.04 55.7785 22.304C56.2225 22.58 56.7565 22.718 57.3805 22.718C58.1125 22.718 58.7065 22.496 59.1625 22.052C59.6185 21.62 59.8465 20.96 59.8465 20.072V18.524C59.5225 18.992 59.0725 19.382 58.4965 19.694C57.9325 20.006 57.2845 20.162 56.5525 20.162C55.7125 20.162 54.9445 19.946 54.2485 19.514C53.5525 19.082 53.0005 18.476 52.5925 17.696C52.1965 16.904 51.9985 15.998 51.9985 14.978C51.9985 13.97 52.1965 13.076 52.5925 12.296C53.0005 11.516 53.5465 10.916 54.2305 10.496C54.9265 10.076 55.7005 9.866 56.5525 9.866ZM59.8465 15.014C59.8465 14.402 59.7265 13.88 59.4865 13.448C59.2465 13.004 58.9225 12.668 58.5145 12.44C58.1065 12.2 57.6685 12.08 57.2005 12.08C56.7325 12.08 56.3005 12.194 55.9045 12.422C55.5085 12.65 55.1845 12.986 54.9325 13.43C54.6925 13.862 54.5725 14.378 54.5725 14.978C54.5725 15.578 54.6925 16.106 54.9325 16.562C55.1845 17.006 55.5085 17.348 55.9045 17.588C56.3125 17.828 56.7445 17.948 57.2005 17.948C57.6685 17.948 58.1065 17.834 58.5145 17.606C58.9225 17.366 59.2465 17.03 59.4865 16.598C59.7265 16.154 59.8465 15.626 59.8465 15.014ZM69.7417 9.884C70.4977 9.884 71.1697 10.052 71.7577 10.388C72.3457 10.712 72.8017 11.198 73.1257 11.846C73.4617 12.482 73.6297 13.25 73.6297 14.15V20H71.1097V14.492C71.1097 13.7 70.9117 13.094 70.5157 12.674C70.1197 12.242 69.5797 12.026 68.8957 12.026C68.1997 12.026 67.6477 12.242 67.2397 12.674C66.8437 13.094 66.6457 13.7 66.6457 14.492V20H64.1257V6.68H66.6457V11.27C66.9697 10.838 67.4017 10.502 67.9417 10.262C68.4817 10.01 69.0817 9.884 69.7417 9.884ZM78.2401 12.098V16.922C78.2401 17.258 78.3181 17.504 78.4741 17.66C78.6421 17.804 78.9181 17.876 79.3021 17.876H80.4721V20H78.8881C76.7641 20 75.7021 18.968 75.7021 16.904V12.098H74.5141V10.028H75.7021V7.562H78.2401V10.028H80.4721V12.098H78.2401ZM85.3806 20.162C84.5646 20.162 83.8326 20.018 83.1846 19.73C82.5366 19.43 82.0206 19.028 81.6366 18.524C81.2646 18.02 81.0606 17.462 81.0246 16.85H83.5626C83.6106 17.234 83.7966 17.552 84.1206 17.804C84.4566 18.056 84.8706 18.182 85.3626 18.182C85.8426 18.182 86.2146 18.086 86.4786 17.894C86.7546 17.702 86.8926 17.456 86.8926 17.156C86.8926 16.832 86.7246 16.592 86.3886 16.436C86.0646 16.268 85.5426 16.088 84.8226 15.896C84.0786 15.716 83.4666 15.53 82.9866 15.338C82.5186 15.146 82.1106 14.852 81.7626 14.456C81.4266 14.06 81.2586 13.526 81.2586 12.854C81.2586 12.302 81.4146 11.798 81.7266 11.342C82.0506 10.886 82.5066 10.526 83.0946 10.262C83.6946 9.998 84.3966 9.866 85.2006 9.866C86.3886 9.866 87.3366 10.166 88.0446 10.766C88.7526 11.354 89.1426 12.152 89.2146 13.16H86.8026C86.7666 12.764 86.5986 12.452 86.2986 12.224C86.0106 11.984 85.6206 11.864 85.1286 11.864C84.6726 11.864 84.3186 11.948 84.0666 12.116C83.8266 12.284 83.7066 12.518 83.7066 12.818C83.7066 13.154 83.8746 13.412 84.2106 13.592C84.5466 13.76 85.0686 13.934 85.7766 14.114C86.4966 14.294 87.0906 14.48 87.5586 14.672C88.0266 14.864 88.4286 15.164 88.7646 15.572C89.1126 15.968 89.2926 16.496 89.3046 17.156C89.3046 17.732 89.1426 18.248 88.8186 18.704C88.5066 19.16 88.0506 19.52 87.4506 19.784C86.8626 20.036 86.1726 20.162 85.3806 20.162Z" fill="#1D2433"/>
                </svg>
               {flights.length > 0 && <Button variant={"secondary"} className="w-[153px] text-[#0D6EFD] font-semibold">Add Hotel</Button>} 
            </div>
            {flights.length === 0 ? 
            (
                <div className=" flex items-center justify-center">
                    <span className="flex flex-col gap-5 text-center mt-10">
                        <p>No Request Yet </p>
                        <Button variant={"default"} className="w-[153px] text-white font-semibold">Add Hotel</Button>
                    </span>
                </div>
            ): (
                <p>""</p>
            )}

        </div>
        </>
    )
}

const HotelItineraies = () => {
    const flights = []
    const [itenary, setItenary] = useState(false)
    return (
         <>
        <div className="bg-[#344054] rounded-lg min-h-[300px] w-full">
            <div className="flex justify-between w-full p-4">
                <svg width="88" height="28" viewBox="0 0 88 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M22.5 18.8748H22.125V7.7307L22.7353 7.60039C22.8818 7.57171 23.0212 7.51415 23.1453 7.43106C23.2693 7.34798 23.3756 7.24102 23.4579 7.11644C23.5402 6.99186 23.5969 6.85215 23.6246 6.70544C23.6524 6.55873 23.6506 6.40796 23.6195 6.26193C23.5884 6.1159 23.5286 5.97752 23.4434 5.85486C23.3583 5.7322 23.2496 5.62772 23.1236 5.5475C22.9977 5.46728 22.8571 5.41293 22.7099 5.38762C22.5628 5.36231 22.4121 5.36654 22.2666 5.40008L1.26656 9.90008C0.995421 9.95858 0.755451 10.1152 0.592735 10.3398C0.430019 10.5645 0.35603 10.8413 0.384977 11.1172C0.413924 11.393 0.543766 11.6485 0.749567 11.8345C0.955369 12.0204 1.22262 12.1238 1.5 12.1248C1.5797 12.1249 1.65919 12.1167 1.73719 12.1004L1.87594 12.0704V18.8748H1.5C1.20163 18.8748 0.915483 18.9933 0.704505 19.2043C0.493526 19.4152 0.375 19.7014 0.375 19.9998C0.375 20.2981 0.493526 20.5843 0.704505 20.7953C0.915483 21.0062 1.20163 21.1248 1.5 21.1248H22.5C22.7984 21.1248 23.0845 21.0062 23.2955 20.7953C23.5065 20.5843 23.625 20.2981 23.625 19.9998C23.625 19.7014 23.5065 19.4152 23.2955 19.2043C23.0845 18.9933 22.7984 18.8748 22.5 18.8748ZM4.125 11.5876L19.875 8.21258V18.8748H18V13.2498C18 12.9514 17.8815 12.6652 17.6705 12.4543C17.4595 12.2433 17.1734 12.1248 16.875 12.1248H7.125C6.82663 12.1248 6.54048 12.2433 6.3295 12.4543C6.11853 12.6652 6 12.9514 6 13.2498V18.8748H4.125V11.5876ZM15.75 15.4998H8.25V14.3748H15.75V15.4998ZM8.25 17.7498H15.75V18.8748H8.25V17.7498Z" fill="white"/>
                    <path d="M45.664 7.436V20H43.144V14.654H37.762V20H35.242V7.436H37.762V12.602H43.144V7.436H45.664ZM51.8523 20.162C50.8923 20.162 50.0283 19.952 49.2603 19.532C48.4923 19.1 47.8863 18.494 47.4423 17.714C47.0103 16.934 46.7943 16.034 46.7943 15.014C46.7943 13.994 47.0163 13.094 47.4603 12.314C47.9163 11.534 48.5343 10.934 49.3143 10.514C50.0943 10.082 50.9643 9.866 51.9243 9.866C52.8843 9.866 53.7543 10.082 54.5343 10.514C55.3143 10.934 55.9263 11.534 56.3703 12.314C56.8263 13.094 57.0543 13.994 57.0543 15.014C57.0543 16.034 56.8203 16.934 56.3523 17.714C55.8963 18.494 55.2723 19.1 54.4803 19.532C53.7003 19.952 52.8243 20.162 51.8523 20.162ZM51.8523 17.966C52.3083 17.966 52.7343 17.858 53.1303 17.642C53.5383 17.414 53.8623 17.078 54.1023 16.634C54.3423 16.19 54.4623 15.65 54.4623 15.014C54.4623 14.066 54.2103 13.34 53.7063 12.836C53.2143 12.32 52.6083 12.062 51.8883 12.062C51.1683 12.062 50.5623 12.32 50.0703 12.836C49.5903 13.34 49.3503 14.066 49.3503 15.014C49.3503 15.962 49.5843 16.694 50.0523 17.21C50.5323 17.714 51.1323 17.966 51.8523 17.966ZM61.1169 12.098V16.922C61.1169 17.258 61.1949 17.504 61.3509 17.66C61.5189 17.804 61.7949 17.876 62.1789 17.876H63.3489V20H61.7649C59.6409 20 58.5789 18.968 58.5789 16.904V12.098H57.3909V10.028H58.5789V7.562H61.1169V10.028H63.3489V12.098H61.1169ZM73.7114 14.798C73.7114 15.158 73.6874 15.482 73.6394 15.77H66.3494C66.4094 16.49 66.6614 17.054 67.1054 17.462C67.5494 17.87 68.0954 18.074 68.7434 18.074C69.6794 18.074 70.3454 17.672 70.7414 16.868H73.4594C73.1714 17.828 72.6194 18.62 71.8034 19.244C70.9874 19.856 69.9854 20.162 68.7974 20.162C67.8374 20.162 66.9734 19.952 66.2054 19.532C65.4494 19.1 64.8554 18.494 64.4234 17.714C64.0034 16.934 63.7934 16.034 63.7934 15.014C63.7934 13.982 64.0034 13.076 64.4234 12.296C64.8434 11.516 65.4314 10.916 66.1874 10.496C66.9434 10.076 67.8134 9.866 68.7974 9.866C69.7454 9.866 70.5914 10.07 71.3354 10.478C72.0914 10.886 72.6734 11.468 73.0814 12.224C73.5014 12.968 73.7114 13.826 73.7114 14.798ZM71.1014 14.078C71.0894 13.43 70.8554 12.914 70.3994 12.53C69.9434 12.134 69.3854 11.936 68.7254 11.936C68.1014 11.936 67.5734 12.128 67.1414 12.512C66.7214 12.884 66.4634 13.406 66.3674 14.078H71.1014ZM77.3507 6.68V20H74.8307V6.68H77.3507ZM82.9365 20.162C82.1205 20.162 81.3885 20.018 80.7405 19.73C80.0925 19.43 79.5765 19.028 79.1925 18.524C78.8205 18.02 78.6165 17.462 78.5805 16.85H81.1185C81.1665 17.234 81.3525 17.552 81.6765 17.804C82.0125 18.056 82.4265 18.182 82.9185 18.182C83.3985 18.182 83.7705 18.086 84.0345 17.894C84.3105 17.702 84.4485 17.456 84.4485 17.156C84.4485 16.832 84.2805 16.592 83.9445 16.436C83.6205 16.268 83.0985 16.088 82.3785 15.896C81.6345 15.716 81.0225 15.53 80.5425 15.338C80.0745 15.146 79.6665 14.852 79.3185 14.456C78.9825 14.06 78.8145 13.526 78.8145 12.854C78.8145 12.302 78.9705 11.798 79.2825 11.342C79.6065 10.886 80.0625 10.526 80.6505 10.262C81.2505 9.998 81.9525 9.866 82.7565 9.866C83.9445 9.866 84.8925 10.166 85.6005 10.766C86.3085 11.354 86.6985 12.152 86.7705 13.16H84.3585C84.3225 12.764 84.1545 12.452 83.8545 12.224C83.5665 11.984 83.1765 11.864 82.6845 11.864C82.2285 11.864 81.8745 11.948 81.6225 12.116C81.3825 12.284 81.2625 12.518 81.2625 12.818C81.2625 13.154 81.4305 13.412 81.7665 13.592C82.1025 13.76 82.6245 13.934 83.3325 14.114C84.0525 14.294 84.6465 14.48 85.1145 14.672C85.5825 14.864 85.9845 15.164 86.3205 15.572C86.6685 15.968 86.8485 16.496 86.8605 17.156C86.8605 17.732 86.6985 18.248 86.3745 18.704C86.0625 19.16 85.6065 19.52 85.0065 19.784C84.4185 20.036 83.7285 20.162 82.9365 20.162Z" fill="white"/>
                </svg>
               {flights.length > 0 && <Button variant={"secondary"} className="w-[153px] text-[#0D6EFD] font-semibold">Add Flight</Button>} 
            </div>
            {flights.length === 0 ? 
            (
                <div className=" flex items-center justify-center">
                    <span className="flex flex-col gap-5 text-center text-white mt-10">
                        <p>No Request Yet </p>
                        <Button variant={"default"} className="w-[153px] text-white font-semibold">Add Flight</Button>
                    </span>
                </div>
            ): (
                <p>""</p>
            )}

        </div>
        </>
    )
}

const ActivityItineraies = () => {
    const flights = []
    const [itenary, setItenary] = useState(false)
    return (
        <>
        <div className="bg-[#0054E4] rounded-lg min-h-[300px] w-full">
            <div className="flex justify-between w-full p-4">
                <svg width="112" height="28" viewBox="0 0 112 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M22.3018 20.9806C22.0417 21.1268 21.7342 21.1637 21.4469 21.0832C21.1597 21.0027 20.9161 20.8113 20.7699 20.5513L14.3443 9.125H13.1256V9.5C13.1256 9.79837 13.007 10.0845 12.796 10.2955C12.5851 10.5065 12.2989 10.625 12.0006 10.625C11.7022 10.625 11.416 10.5065 11.2051 10.2955C10.9941 10.0845 10.8756 9.79837 10.8756 9.5V9.125H9.6568L3.23118 20.5513C3.15961 20.6816 3.06292 20.7964 2.9467 20.8891C2.83048 20.9818 2.69704 21.0506 2.55408 21.0914C2.41113 21.1322 2.2615 21.1443 2.11385 21.127C1.96619 21.1096 1.82344 21.0632 1.69384 20.9903C1.56424 20.9175 1.45037 20.8197 1.35881 20.7025C1.26724 20.5854 1.1998 20.4513 1.16038 20.308C1.12096 20.1646 1.11035 20.0149 1.12915 19.8674C1.14795 19.7199 1.1958 19.5776 1.26993 19.4487L7.0768 9.125H2.25055C1.95218 9.125 1.66604 9.00647 1.45506 8.7955C1.24408 8.58452 1.12555 8.29837 1.12555 8C1.12555 7.70163 1.24408 7.41548 1.45506 7.2045C1.66604 6.99353 1.95218 6.875 2.25055 6.875H21.7506C22.0489 6.875 22.3351 6.99353 22.546 7.2045C22.757 7.41548 22.8756 7.70163 22.8756 8C22.8756 8.29837 22.757 8.58452 22.546 8.7955C22.3351 9.00647 22.0489 9.125 21.7506 9.125H16.9243L22.7312 19.4487C22.8774 19.7088 22.9143 20.0163 22.8337 20.3036C22.7532 20.5909 22.5619 20.8344 22.3018 20.9806ZM12.0006 12.125C11.7022 12.125 11.416 12.2435 11.2051 12.4545C10.9941 12.6655 10.8756 12.9516 10.8756 13.25V14.75C10.8756 15.0484 10.9941 15.3345 11.2051 15.5455C11.416 15.7565 11.7022 15.875 12.0006 15.875C12.2989 15.875 12.5851 15.7565 12.796 15.5455C13.007 15.3345 13.1256 15.0484 13.1256 14.75V13.25C13.1256 12.9516 13.007 12.6655 12.796 12.4545C12.5851 12.2435 12.2989 12.125 12.0006 12.125ZM12.0006 17.375C11.7022 17.375 11.416 17.4935 11.2051 17.7045C10.9941 17.9155 10.8756 18.2016 10.8756 18.5V20C10.8756 20.2984 10.9941 20.5845 11.2051 20.7955C11.416 21.0065 11.7022 21.125 12.0006 21.125C12.2989 21.125 12.5851 21.0065 12.796 20.7955C13.007 20.5845 13.1256 20.2984 13.1256 20V18.5C13.1256 18.2016 13.007 17.9155 12.796 17.7045C12.5851 17.4935 12.2989 17.375 12.0006 17.375Z" fill="#F9FAFB"/>
                    <path d="M42.946 17.606H37.942L37.114 20H34.468L38.986 7.418H41.92L46.438 20H43.774L42.946 17.606ZM42.262 15.59L40.444 10.334L38.626 15.59H42.262ZM46.7588 15.014C46.7588 13.982 46.9688 13.082 47.3888 12.314C47.8088 11.534 48.3908 10.934 49.1348 10.514C49.8788 10.082 50.7308 9.866 51.6908 9.866C52.9268 9.866 53.9468 10.178 54.7508 10.802C55.5668 11.414 56.1128 12.278 56.3888 13.394H53.6708C53.5268 12.962 53.2808 12.626 52.9328 12.386C52.5968 12.134 52.1768 12.008 51.6728 12.008C50.9528 12.008 50.3828 12.272 49.9628 12.8C49.5428 13.316 49.3328 14.054 49.3328 15.014C49.3328 15.962 49.5428 16.7 49.9628 17.228C50.3828 17.744 50.9528 18.002 51.6728 18.002C52.6928 18.002 53.3588 17.546 53.6708 16.634H56.3888C56.1128 17.714 55.5668 18.572 54.7508 19.208C53.9348 19.844 52.9148 20.162 51.6908 20.162C50.7308 20.162 49.8788 19.952 49.1348 19.532C48.3908 19.1 47.8088 18.5 47.3888 17.732C46.9688 16.952 46.7588 16.046 46.7588 15.014ZM60.4489 12.098V16.922C60.4489 17.258 60.5269 17.504 60.6829 17.66C60.8509 17.804 61.1269 17.876 61.5109 17.876H62.6809V20H61.0969C58.9729 20 57.9109 18.968 57.9109 16.904V12.098H56.7229V10.028H57.9109V7.562H60.4489V10.028H62.6809V12.098H60.4489ZM65.0514 8.84C64.6074 8.84 64.2354 8.702 63.9354 8.426C63.6474 8.138 63.5034 7.784 63.5034 7.364C63.5034 6.944 63.6474 6.596 63.9354 6.32C64.2354 6.032 64.6074 5.888 65.0514 5.888C65.4954 5.888 65.8614 6.032 66.1494 6.32C66.4494 6.596 66.5994 6.944 66.5994 7.364C66.5994 7.784 66.4494 8.138 66.1494 8.426C65.8614 8.702 65.4954 8.84 65.0514 8.84ZM66.2934 10.028V20H63.7734V10.028H66.2934ZM72.2212 17.678L74.7412 10.028H77.4232L73.7332 20H70.6732L67.0012 10.028H69.7012L72.2212 17.678ZM79.3966 8.84C78.9526 8.84 78.5806 8.702 78.2806 8.426C77.9926 8.138 77.8486 7.784 77.8486 7.364C77.8486 6.944 77.9926 6.596 78.2806 6.32C78.5806 6.032 78.9526 5.888 79.3966 5.888C79.8406 5.888 80.2066 6.032 80.4946 6.32C80.7946 6.596 80.9446 6.944 80.9446 7.364C80.9446 7.784 80.7946 8.138 80.4946 8.426C80.2066 8.702 79.8406 8.84 79.3966 8.84ZM80.6386 10.028V20H78.1186V10.028H80.6386ZM85.3423 12.098V16.922C85.3423 17.258 85.4203 17.504 85.5763 17.66C85.7443 17.804 86.0203 17.876 86.4043 17.876H87.5743V20H85.9903C83.8663 20 82.8043 18.968 82.8043 16.904V12.098H81.6163V10.028H82.8043V7.562H85.3423V10.028H87.5743V12.098H85.3423ZM89.9448 8.84C89.5008 8.84 89.1288 8.702 88.8288 8.426C88.5408 8.138 88.3968 7.784 88.3968 7.364C88.3968 6.944 88.5408 6.596 88.8288 6.32C89.1288 6.032 89.5008 5.888 89.9448 5.888C90.3888 5.888 90.7548 6.032 91.0428 6.32C91.3428 6.596 91.4928 6.944 91.4928 7.364C91.4928 7.784 91.3428 8.138 91.0428 8.426C90.7548 8.702 90.3888 8.84 89.9448 8.84ZM91.1868 10.028V20H88.6668V10.028H91.1868ZM102.227 14.798C102.227 15.158 102.203 15.482 102.155 15.77H94.8646C94.9246 16.49 95.1766 17.054 95.6206 17.462C96.0646 17.87 96.6106 18.074 97.2586 18.074C98.1946 18.074 98.8606 17.672 99.2566 16.868H101.975C101.687 17.828 101.135 18.62 100.319 19.244C99.5026 19.856 98.5006 20.162 97.3126 20.162C96.3526 20.162 95.4886 19.952 94.7206 19.532C93.9646 19.1 93.3706 18.494 92.9386 17.714C92.5186 16.934 92.3086 16.034 92.3086 15.014C92.3086 13.982 92.5186 13.076 92.9386 12.296C93.3586 11.516 93.9466 10.916 94.7026 10.496C95.4586 10.076 96.3286 9.866 97.3126 9.866C98.2606 9.866 99.1066 10.07 99.8506 10.478C100.607 10.886 101.189 11.468 101.597 12.224C102.017 12.968 102.227 13.826 102.227 14.798ZM99.6166 14.078C99.6046 13.43 99.3706 12.914 98.9146 12.53C98.4586 12.134 97.9006 11.936 97.2406 11.936C96.6166 11.936 96.0886 12.128 95.6566 12.512C95.2366 12.884 94.9786 13.406 94.8826 14.078H99.6166ZM107.162 20.162C106.346 20.162 105.614 20.018 104.966 19.73C104.318 19.43 103.802 19.028 103.418 18.524C103.046 18.02 102.842 17.462 102.806 16.85H105.344C105.392 17.234 105.578 17.552 105.902 17.804C106.238 18.056 106.652 18.182 107.144 18.182C107.624 18.182 107.996 18.086 108.26 17.894C108.536 17.702 108.674 17.456 108.674 17.156C108.674 16.832 108.506 16.592 108.17 16.436C107.846 16.268 107.324 16.088 106.604 15.896C105.86 15.716 105.248 15.53 104.768 15.338C104.3 15.146 103.892 14.852 103.544 14.456C103.208 14.06 103.04 13.526 103.04 12.854C103.04 12.302 103.196 11.798 103.508 11.342C103.832 10.886 104.288 10.526 104.876 10.262C105.476 9.998 106.178 9.866 106.982 9.866C108.17 9.866 109.118 10.166 109.826 10.766C110.534 11.354 110.924 12.152 110.996 13.16H108.584C108.548 12.764 108.38 12.452 108.08 12.224C107.792 11.984 107.402 11.864 106.91 11.864C106.454 11.864 106.1 11.948 105.848 12.116C105.608 12.284 105.488 12.518 105.488 12.818C105.488 13.154 105.656 13.412 105.992 13.592C106.328 13.76 106.85 13.934 107.558 14.114C108.278 14.294 108.872 14.48 109.34 14.672C109.808 14.864 110.21 15.164 110.546 15.572C110.894 15.968 111.074 16.496 111.086 17.156C111.086 17.732 110.924 18.248 110.6 18.704C110.288 19.16 109.832 19.52 109.232 19.784C108.644 20.036 107.954 20.162 107.162 20.162Z" fill="white"/>
                </svg>
               {flights.length > 0 && <Button variant={"secondary"} className="w-[153px] text-[#0D6EFD] font-semibold">Add Activity</Button>} 
            </div>
            {flights.length === 0 ? 
            (
                <div className=" flex items-center justify-center">
                    <span className="flex flex-col gap-5 text-center text-white mt-10">
                        <p>No Request Yet </p>
                        <Button variant={"default"} className="w-[153px] text-white font-semibold">Add Activity</Button>
                    </span>
                </div>
            ): (
                <p>""</p>
            )}

        </div>
        </>
    )
}